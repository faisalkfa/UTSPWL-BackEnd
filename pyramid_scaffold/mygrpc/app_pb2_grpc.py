# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import app_pb2 as app__pb2
from pyramid_scaffold.models import DBSession, Product


class ProductServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CalculateTotalPrice = channel.unary_unary(
                '/mygrpc.ProductService/CalculateTotalPrice',
                request_serializer=app__pb2.CalculateTotalRequest.SerializeToString,
                response_deserializer=app__pb2.CalculateTotalResponse.FromString,
                )
        self.GetProductDetails = channel.unary_unary(
                '/mygrpc.ProductService/GetProductDetails',
                request_serializer=app__pb2.ProductDetailsRequest.SerializeToString,
                response_deserializer=app__pb2.ProductDetailsResponse.FromString,
                )


class ProductServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CalculateTotalPrice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProductDetails(self, request, context):
        session = DBSession()
        product_id = request.product_id
        product = session.query(Product).filter(Product.id == product_id).first()

        if product:
            return app__pb2.Product(
                id=product.id,
                name=product.name,
                description=product.description,
                price=product.price,
                stock=product.stock,
            )
        else:
            context.set_code(grpc.StatusCode.NOT_FOUND)
            context.set_details("Product not found")
            return app__pb2.Product()


def add_ProductServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CalculateTotalPrice': grpc.unary_unary_rpc_method_handler(
                    servicer.CalculateTotalPrice,
                    request_deserializer=app__pb2.CalculateTotalRequest.FromString,
                    response_serializer=app__pb2.CalculateTotalResponse.SerializeToString,
            ),
            'GetProductDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProductDetails,
                    request_deserializer=app__pb2.ProductDetailsRequest.FromString,
                    response_serializer=app__pb2.ProductDetailsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mygrpc.ProductService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProductService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CalculateTotalPrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mygrpc.ProductService/CalculateTotalPrice',
            app__pb2.CalculateTotalRequest.SerializeToString,
            app__pb2.CalculateTotalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProductDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mygrpc.ProductService/GetProductDetails',
            app__pb2.ProductDetailsRequest.SerializeToString,
            app__pb2.ProductDetailsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
